"use strict";(self.webpackChunkdocs2=self.webpackChunkdocs2||[]).push([[598],{6901:(n,s,e)=>{e.r(s),e.d(s,{data:()=>a});const a={key:"v-481c28e0",path:"/DOCS_README.html",title:"Osmosis Documentation Guide",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"Vuepress",slug:"vuepress",children:[]},{level:3,title:"Config.js",slug:"config-js",children:[]},{level:3,title:"Local Development",slug:"local-development",children:[]},{level:2,title:"Production build & Automated Deployment to Github Pages",slug:"production-build-automated-deployment-to-github-pages",children:[]}],filePathRelative:"DOCS_README.md",git:{contributors:[{name:"Daniel Farina",email:"contact@nevulas.com",commits:1}]}}},3140:(n,s,e)=>{e.r(s),e.d(s,{default:()=>_});var a=e(6252);const t=(0,a._)("h1",{id:"osmosis-documentation-guide",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#osmosis-documentation-guide","aria-hidden":"true"},"#"),(0,a.Uk)(" Osmosis Documentation Guide")],-1),l=(0,a._)("p",null,"The documentation for Osmosis will be hosted at:",-1),o={href:"https://docs.osmosis.zone/",target:"_blank",rel:"noopener noreferrer"},p=(0,a.Uk)("https://docs.osmosis.zone/"),i=(0,a._)("li",null,[(0,a._)("p",null,"This proof of concept: https://daniel-farina.github.io/osmosis/")],-1),c=(0,a.Uk)("This site is generated from files in this "),r={href:"https://github.com/osmosis-labs/osmosis/tree/master/docs",target:"_blank",rel:"noopener noreferrer"},u=(0,a._)("code",null,"docs",-1),d=(0,a.Uk)(" directory for "),b=(0,a._)("code",null,"master",-1),m=(0,a._)("h3",{id:"vuepress",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#vuepress","aria-hidden":"true"},"#"),(0,a.Uk)(" Vuepress")],-1),h=(0,a.Uk)("This site was generated using vuepress. "),k={href:"https://vuepress.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},g=(0,a.Uk)("Documentation can be found here"),f=(0,a.Uk)("."),v=(0,a.uE)('<h3 id="config-js" tabindex="-1"><a class="header-anchor" href="#config-js" aria-hidden="true">#</a> Config.js</h3><p>The <a href="./.vuepress/config.js">config.js</a> contains most of the configuration used for the site generation.</p><h3 id="local-development" tabindex="-1"><a class="header-anchor" href="#local-development" aria-hidden="true">#</a> Local Development</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>git clone https://github.com/daniel-farina/osmosis.git\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>This link will change once we are ready to merge from this fork to osmosis)</li></ul><p>Make sure you are inside the docs folder</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cd docs\nyarn install\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Run &amp; watch files for changes</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>yarn dev\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="production-build-automated-deployment-to-github-pages" tabindex="-1"><a class="header-anchor" href="#production-build-automated-deployment-to-github-pages" aria-hidden="true">#</a> Production build &amp; Automated Deployment to Github Pages</h2><p>This site can be deployed to Github pages. All that needs to be done is use the git action included in the root directory under <code>.github/workflows/docbuild.yml</code>. This action will deploy the site inside a branch called gh-pages. This branch can then be configured to be served as a website in the repository settings. The git action looks like this:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> Build and Deploy\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> main\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout üõéÔ∏è\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2.3.1\n\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install and Build üîß <span class="token comment"># This will create version inside the &#39;build&#39; folder.</span>\n        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n          cd docs\n          npm install\n          npm run build</span>\n\n      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Deploy üöÄ\n        <span class="token key atrule">uses</span><span class="token punctuation">:</span> JamesIves/github<span class="token punctuation">-</span>pages<span class="token punctuation">-</span>deploy<span class="token punctuation">-</span>action@4.1.5\n        <span class="token key atrule">with</span><span class="token punctuation">:</span>\n          <span class="token key atrule">branch</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages <span class="token comment"># The branch the action should deploy to.</span>\n          <span class="token key atrule">folder</span><span class="token punctuation">:</span> docs/src/.vuepress/dist\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>',12),y={},_=(0,e(3744).Z)(y,[["render",function(n,s){const e=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[t,l,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("p",null,[(0,a._)("a",o,[p,(0,a.Wm)(e)])])]),i]),(0,a._)("p",null,[c,(0,a._)("a",r,[u,d,b,(0,a.Wm)(e)])]),m,(0,a._)("p",null,[h,(0,a._)("a",k,[g,(0,a.Wm)(e)]),f]),v],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const e=n.__vccOpts||n;for(const[n,a]of s)e[n]=a;return e}}}]);